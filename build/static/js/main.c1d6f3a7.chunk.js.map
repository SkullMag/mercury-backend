{"version":3,"sources":["assets/1024.png","constants.js","store/slices/auth.js","store/index.js","components/Header.jsx","components/ProfileInfoCard.jsx","components/ProfilePage.jsx","utils.js","components/WordInput.jsx","components/Definition.jsx","icons/BookmarkIcon.jsx","components/DropdownMenu.jsx","icons/CheckIcon.jsx","components/AddToCollectionButton.jsx","components/PronounceButton.jsx","components/DefinitionsView.jsx","components/Dictionary.jsx","components/LoginForm.jsx","components/SignUpForm.jsx","components/VerificationCodePage.jsx","context/CollectionsContext.js","icons/ChevronIcon.jsx","components/Collection.jsx","components/CollectionsHeader.jsx","components/Collections.jsx","context/CollectionWordsContext.js","components/CollectionWord.jsx","components/CollectionWordsHeader.jsx","components/CollectionWords.jsx","i18n.js","components/FinishLearningCard.jsx","components/LearningCard.jsx","components/Learning.jsx","index.jsx"],"names":["module","exports","SERVER_IP","initialState","username","fullname","profileBio","isSubscribed","token","localStorage","getItem","slice","createSlice","name","reducers","loginAction","state","action","payload","logoutAction","removeItem","actions","signupAction","dispatch","_","a","fetch","response","status","json","json_data","configureStore","reducer","auth","authReducer","Header","props","location","useLocation","t","useTranslation","className","alt","src","logo","height","id","pathname","to","ProfileInfoCard","authState","useSelector","image","TINYGRAPH_IP","ProfilePage","useDispatch","navigate","useNavigate","onClick","requestWord","word","url","replace","capitalize","length","charAt","toUpperCase","validateEmail","email","String","toLowerCase","match","requestVerificationCode","WordInputForm","React","useState","setState","search","setParentState","parentState","isLoading","result","value","onChange","event","target","onKeyPress","key","placeholder","type","Definition","partOfSpeech","definition","map","elem","i","example","BookmarkIcon","fill","width","xmlns","viewBox","d","DropdownMenu","header","body","footer","isHidden","style","DropdownItem","isActive","setActive","e","onSelect","textContent","children","marginLeft","display","right","CheckIcon","class","AddToCollectionButton","dropdownHidden","setDropdownHidden","collections","setCollections","selectedCollections","Set","collectionSelected","wasSelected","delete","add","useEffect","join","fetchData","title","hidden","collection","forEach","method","PronounceButton","phonetics","Audio","play","memo","definitionsViewClassName","showWord","addToCollectionButton","definitions","isFound","def","push","Dictionary","marginBottom","LoginForm","store","useStore","errorText","setErrorText","password","JSON","stringify","setItem","error","SingUpForm","repeatedPassword","passwordScore","passwordsMatch","onInputChange","currentTarget","minLength","onChangeScore","score","VerificationCodePage","seconds","setSeconds","verificationCode","setVerificationCode","console","log","interval","setInterval","s","clearInterval","CollectionsContext","createContext","ChevronIcon","fillRule","Collection","authorUsername","collectionName","wordCount","onDelete","isEditing","useContext","CollectionsHeader","setCollectionName","toggleEditing","ok","transform","Collections","setEditing","onCollectionDelete","filter","col","fetchCollections","Provider","edit","CollectionWordsContext","jsonData","isOpen","setOpen","chevronStyle","transition","prev","marginRight","backgroundColor","paddingTop","margin","CollectionWordsHeader","collectionWords","ns","useParams","setCollectionWords","collectionWordDeleted","w","then","sort","b","borderBottom","cursor","paddingLeft","i18n","use","initReactI18next","init","fallbackLng","debug","resources","en","enLocalization","ru","ruLocalization","interpolation","escapeValue","FinishLearningCard","wordsStatus","percentage","Math","floor","reduce","LearningCard","currentWordIndex","moveCurrentWordIndex","numberOfWords","wordStatusChanged","definitionShowing","setDefinitionShowing","nextWord","Learning","wordsToLearn","currentIndex","setCurrentIndex","setWordsStatus","updatePriorities","toString","Index","fallback","path","element","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.c1d6f3a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1024.bec1be25.png\";","export const SERVER_IP = \"\"\nexport const TINYGRAPH_IP = \"http://tinygraphs.com\"","import { createSlice } from \"@reduxjs/toolkit\";\nimport { SERVER_IP } from \"../../constants\";\n\n\nconst initialState = {\n    username: \"\",\n    fullname: \"\",\n    profileBio: \"\",\n    isSubscribed: \"\",\n    token: localStorage.getItem(\"token\") === null ? \"\" : localStorage.getItem(\"token\")\n};\n\n\nexport const slice = createSlice({\n    name: \"auth\",\n    initialState: initialState,\n    reducers: {\n        loginAction: (state, action) => {\n            state.fullname = action.payload.fullname;\n            state.isSubscribed = action.payload.isSubscribed;\n            state.username = action.payload.username;\n            state.profileBio = action.payload.profileBio;\n            state.token = action.payload.token;\n            return state\n        },\n        logoutAction: () => {\n            localStorage.removeItem(\"token\");\n            return initialState\n        }\n    }\n});\n\nexport const { loginAction, logoutAction, signupAction } = slice.actions;\nexport async function fetchUser(dispatch, _) {\n    const token = localStorage.getItem(\"token\");\n    if (token !== null) {\n        const response = await fetch(SERVER_IP + \"/api/getUserData/\" + token);\n        if (response.status === 200) {\n            var json_data = await response.json();\n            json_data.token = token;\n            dispatch(slice.actions.loginAction(json_data));\n        } else {\n            dispatch(slice.actions.logoutAction())\n        }\n    }\n}\nexport default slice.reducer;","import { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from \"./slices/auth\";\n\nexport default configureStore({\n    reducer: {\n        auth: authReducer\n    }\n});","import React from \"react\";\nimport logo from \"../assets/1024.png\";\nimport \"../styles/Header.css\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\n\nfunction Header(props) {\n    const location = useLocation();\n    const { t } = useTranslation(\"navbar\")\n    return (\n        <nav className=\"Header\">\n            <img alt=\"logo\" src={logo} height=\"32px\" id=\"logo\" />\n            <p className=\"titleName\">Mercury</p> \n            <Link className={location.pathname === \"/dictionary\" ? \"pageLink active\" : \"pageLink\"} to=\"/dictionary\">{t(\"dictionary\")}</Link>\n            <Link className={location.pathname === \"/collections\" ? \"pageLink active\" : \"pageLink\"} to=\"/collections\">{t(\"collections\")}</Link>\n            <Link className={location.pathname === \"/account\" ? \"pageLink active\" : \"pageLink\"} to=\"/account\">{t(\"account\")}</Link>\n        </nav>\n    );\n}\n\n\nexport default Header;\n","import React from \"react\";\nimport \"../styles/ProfileInfoCard.css\"\nimport { useSelector } from \"react-redux\";\nimport { TINYGRAPH_IP } from \"../constants\";\n\n\nfunction ProfileInfoCard() {\n    const authState = useSelector((state) => state.auth);\n    let image = \"\";\n\n    if (authState.username !== \"\") {\n        image = TINYGRAPH_IP + \"/spaceinvaders/\" + authState.username + \"?theme=bythepool&numcolors=4&size=200&fmt=svg\";\n    }\n\n    return (\n        <div className=\"card profileInfoCard\">\n            <img className=\"userProfilePicture\" alt=\"Profile\" src={image} />\n            <h1 className=\"fullname\">{authState.fullname}</h1>\n            <p className=\"username\">@{authState.username}</p>\n            {authState.profileBio !== \"\" ? <i><q className=\"profileBio\">{authState.profileBio}</q></i> : null }\n        </div>\n    );\n}\n\nexport default ProfileInfoCard","import \"../styles/ProfilePage.css\"\nimport ProfileInfoCard from \"./ProfileInfoCard\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutAction } from \"../store/slices/auth\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction ProfilePage() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const authState = useSelector((state) => state.auth);\n    const { t } = useTranslation(\"auth\")\n\n    if (authState.token === \"\") {\n        return (<Navigate to=\"/login\" />);\n    }\n\n    function logout() {\n        dispatch(logoutAction());\n        navigate(\"/login\");\n    }\n    \n    return (\n        <div className=\"profilePage\">\n            <section>\n                <ProfileInfoCard/>\n                <button onClick={logout} className=\"card logoutButton\">{t(\"logoutButton\")}</button>\n            </section>\n        </div>\n    );\n}\n\nexport default ProfilePage;","import { SERVER_IP } from \"./constants\";\n\nasync function requestWord(word) {\n    var url = SERVER_IP + \"/api/definition/{}\";\n    let response = await fetch(url.replace(\"{}\", word));\n    return await response.json()\n}\n\nfunction capitalize(word) {\n    return word.length > 0 ? word.charAt(0).toUpperCase() + (word.length > 1 ? word.slice(1) : \"\"): \"\"\n}\n\nfunction pronounceWord(url) {\n    var player = new Audio(url);\n    player.play()\n}\n\nfunction validateEmail(email) {\n    return String(email)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      );\n}\n\nasync function requestVerificationCode(username, email) {\n    const response = await fetch(SERVER_IP + \"/api/requestVerificationCode/\" + username + \"/\" + email);\n    return [response.status === 200 ? null : await response.json(), response.status];\n}\n\nexport {requestWord, capitalize, pronounceWord, validateEmail, requestVerificationCode};\n","import \"../styles/WordInput.css\"\nimport React from \"react\";\nimport { requestWord, capitalize } from \"../utils.js\";\nimport { useTranslation } from \"react-i18next\";\n\n\nfunction WordInputForm(props) {\n    const [state, setState] = React.useState({\n        word: \"\"\n    });\n\n    const { t } = useTranslation(\"dictionary\")\n\n    function inputChanged(event) {\n        var word = event.target.value;\n        setState({\n            ...state,\n            word: capitalize(word)\n        });\n    }\n\n    async function search() {\n        props.setParentState({\n            ...props.parentState,\n            isLoading: true\n        });\n        let result = await requestWord(state.word.toLowerCase());\n        props.setParentState({\n            ...props.parentState,\n            json_data: result\n        });\n    }\n\n    function keyPressed(event) {\n        if (event.key === \"Enter\") {\n            search()\n        }\n    }\n\n    return (\n        <div className=\"WordInputForm\">\n            <input className=\"card WordInput\" value={state.word} onChange={inputChanged} onKeyPress={keyPressed} placeholder={t(\"wordInputPlaceholder\")} type=\"text\"/>\n            <button className=\"card SearchButton\" onClick={search}>{t(\"searchButton\")}</button>\n        </div>\n    );\n}\n\nexport default WordInputForm;\n","import React from \"react\";\nimport { capitalize } from \"../utils\";\nimport \"../styles/Definition.css\";\n\n\nfunction Definition(props) {\n    return (\n        <div className=\"Definition\">\n            <p id=\"definition\"><span id=\"partOfSpeech\">{capitalize(props.partOfSpeech)}:&nbsp;</span>\n            <ol className=\"definitionsList\">\n                {props.definition.map((elem, i) => (\n                    <div key={i}>\n                        <li>{elem.definition}</li>\n                        {elem.example !== \"\" ? <i className=\"example\"><q>{elem.example}</q></i> : null}\n                    </div>\n                ))}\n            </ol>\n            </p>\n        </div>\n    );\n}\n\nexport default Definition;\n","import React from \"react\"\n\nexport const BookmarkIcon = ({fill, width, height}) => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={width} height={height} fill={fill} className=\"bi bi-bookmarks-fill\" viewBox=\"0 0 16 16\">\n            <path d=\"M2 4a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v11.5a.5.5 0 0 1-.777.416L7 13.101l-4.223 2.815A.5.5 0 0 1 2 15.5V4z\"/>\n            <path d=\"M4.268 1A2 2 0 0 1 6 0h6a2 2 0 0 1 2 2v11.5a.5.5 0 0 1-.777.416L13 13.768V2a1 1 0 0 0-1-1H4.268z\"/>\n        </svg>\n    )\n}","import React from \"react\"\n\nexport function DropdownMenu({ header, body, footer, isHidden, style }) {\n    return !isHidden && (\n        <div className=\"dropdown-menu card\" style={style}>\n            <div className=\"dropdown-header\">\n                {header}\n            </div>\n            <div className=\"dropdown-body\">\n                {body}\n            </div>\n            <div className=\"dropdown-footer\">\n                {footer}\n            </div>\n        </div>\n    )\n}\n\nexport function DropdownItem(props) {\n    const [isActive, setActive] = React.useState(false)\n\n    function itemSelected(e) {\n        const status = isActive\n        setActive(!status)\n        props.onSelect(e.target.textContent, status)\n    }\n    return (\n        <div className={isActive ? \"dropdown-item active\" : \"dropdown-item\"} onClick={itemSelected}>\n            {props.children}\n            <div className=\"right-item\" style={{marginLeft: \"auto\", display: isActive ? \"flex\" : \"none\"}}>\n                {props.right}\n            </div>\n        </div>\n    )\n}","import React from \"react\"\n\nexport const CheckIcon = ({ width, height, fill }) => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={width} height={height} fill={fill} class=\"bi bi-check\" viewBox=\"0 0 16 16\">\n            <path d=\"M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z\"/>\n        </svg>\n    )\n}","import React from \"react\";\nimport { BookmarkIcon } from \"../icons/BookmarkIcon\"\nimport { DropdownMenu, DropdownItem } from \"./DropdownMenu\";\nimport \"../styles/DropdownMenu.css\"\nimport { SERVER_IP } from \"../constants\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { capitalize } from \"../utils\";\nimport { CheckIcon } from \"../icons/CheckIcon\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function AddToCollectionButton({ word }) {\n    const [dropdownHidden, setDropdownHidden] = React.useState(true)\n    const authState = useSelector(state => state.auth)\n    const [collections, setCollections] = React.useState([])\n    const { t } = useTranslation(\"dictionary\")\n    let selectedCollections = new Set()\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch([SERVER_IP, \"api\", \"getCollections\", authState.token, authState.username].join(\"/\"))\n            if (response.status === 200) {\n                setCollections(await response.json())\n            }\n        }\n        if (authState.username !== \"\") {\n            fetchData()\n        }\n    }, [authState.username])\n\n    function collectionSelected(name, wasSelected) {\n        wasSelected ? selectedCollections.delete(name) : selectedCollections.add(name)\n    }\n\n    function saveChanges() {\n        selectedCollections.forEach(async name => {\n            await fetch([SERVER_IP, \"api\", \"addWordToCollection\", authState.token, \n                         name.toLowerCase(), word].join(\"/\"), { method: \"POST\" })\n        })\n        setDropdownHidden(hidden => !hidden)\n    }\n    \n    return (\n        <>\n            <button title=\"Add to collection\" className=\"card addToCollection\" onClick={() => setDropdownHidden(hidden => !hidden)}> \n                <BookmarkIcon width={19} height={19} fill=\"white\" />\n            </button>\n            <DropdownMenu \n                title=\"Choose collections\" \n                header={(<p>{t(\"chooseCollections\")}</p>)}\n                body={collections.map((collection, i) => {\n                    return (\n                        <DropdownItem onSelect={collectionSelected} key={i} right={<CheckIcon width={32} height={32} fill=\"white\"/>}>\n                            {capitalize(collection.name)}\n                        </DropdownItem>  \n                    )\n                })} \n                footer={(\n                    <>\n                        <button className=\"addToCollectionsButton\" onClick={saveChanges}>{t(\"addToCollectionsButton\")}</button>\n                        {/* <br />\n                        <button className=\"cancelChoiceButton\" onClick={() => setDropdownHidden(hidden => !hidden)}>Cancel</button> */}\n                    </>\n                )}\n                isHidden={dropdownHidden}\n            />\n                \n        </>\n    )\n}","import React from \"react\"\nimport { pronounceWord } from \"../utils\"\nimport \"../styles/PronounceButton.css\"\n\nexport default function PronounceButton({ width, height, fill, style, phonetics }) {\n    return (\n        <button title=\"Pronounce\" className=\"pronounceButton\" onClick={() => pronounceWord(phonetics)}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width={width} height={height} fill={fill} style={style} className=\"bi bi-volume-up-fill\" viewBox=\"0 0 16 16\">\n                <path d=\"M11.536 14.01A8.473 8.473 0 0 0 14.026 8a8.473 8.473 0 0 0-2.49-6.01l-.708.707A7.476 7.476 0 0 1 13.025 8c0 2.071-.84 3.946-2.197 5.303l.708.707z\"/>\n                <path d=\"M10.121 12.596A6.48 6.48 0 0 0 12.025 8a6.48 6.48 0 0 0-1.904-4.596l-.707.707A5.483 5.483 0 0 1 11.025 8a5.483 5.483 0 0 1-1.61 3.89l.706.706z\"/>\n                <path d=\"M8.707 11.182A4.486 4.486 0 0 0 10.025 8a4.486 4.486 0 0 0-1.318-3.182L8 5.525A3.489 3.489 0 0 1 9.025 8 3.49 3.49 0 0 1 8 10.475l.707.707zM6.717 3.55A.5.5 0 0 1 7 4v8a.5.5 0 0 1-.812.39L3.825 10.5H1.5A.5.5 0 0 1 1 10V6a.5.5 0 0 1 .5-.5h2.325l2.363-1.89a.5.5 0 0 1 .529-.06z\"/>\n            </svg>\n        </button>\n    )\n}","import \"../styles/DefinitionsView.css\";\nimport Definition from \"./Definition.jsx\"\nimport React from \"react\";\nimport AddToCollectionButton from \"./AddToCollectionButton\"\nimport { useTranslation } from \"react-i18next\";\nimport PronounceButton from \"./PronounceButton\";\n\n\nfunction DefinitionsView({ json_data, definitionsViewClassName, showWord=true, addToCollectionButton, style }) {\n    const { t } = useTranslation(\"dictionary\")\n\n    let definitions = [];\n    let isFound = !(\"error\" in json_data);\n    if (json_data != null && isFound) {\n        let def = json_data.definitions\n        let i = 0;\n        for (var partOfSpeech in def) {\n            definitions.push((<Definition key={i} partOfSpeech={partOfSpeech} definition={def[partOfSpeech]} example={def[partOfSpeech][0].example} />))\n            i += 1;\n        }\n    }\n    if (isFound) {\n        return (\n            <>\n            <div className={definitionsViewClassName + \" DefinitionsView\"} style={style}>\n                {showWord && <div className=\"wordView\">\n                    <p className=\"word\">{json_data.word}</p>\n                    { json_data.phonetics !== \"\" ?\n                        <PronounceButton width=\"24\" height=\"24\" fill=\"white\" phonetics={json_data.phonetics} />\n                    : null}\n                    { addToCollectionButton ? <AddToCollectionButton word={json_data.word} /> : null}\n                </div>}\n                {definitions}\n            </div>\n            </>\n        );\n    } else {\n        return (\n            <div className={definitionsViewClassName + \" DefinitionsView\"} style={style}>\n                <p id=\"definition\"><span id=\"partOfSpeech\">{t(\"tryAnotherWord\")}</span></p>\n            </div>\n        );\n    }\n}\n\n\nexport default React.memo(DefinitionsView);\n","import WordInputForm from './WordInput.jsx';\nimport DefinitionsView from './DefinitionsView.jsx';\nimport \"../styles/Dictionary.css\"\nimport React from \"react\";\n\n\nexport default function Dictionary() {\n    const [state, setState] = React.useState({\n        json_data: null,\n        isLoading: false\n    });\n\n    return (\n        <div className=\"Definitions\">\n            <section>\n                <WordInputForm setParentState={setState} parentState={state}/>\n                {state.json_data !== null ? <DefinitionsView json_data={state.json_data} addToCollectionButton={true} definitionsViewClassName=\"card\" style={{marginBottom: \"200px\"}} /> : null}\n            </section>\n        </div>\n    );\n\n}\n","import React from \"react\";\nimport \"../styles/LoginForm.css\"\nimport { useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useStore } from \"react-redux\";\nimport { loginAction } from \"../store/slices/auth\"\nimport { Link } from \"react-router-dom\";\nimport { SERVER_IP } from \"../constants\";\nimport { useTranslation } from \"react-i18next\";\n\n\nfunction LoginForm(props) {\n\n    const store = useStore();\n    const navigate = useNavigate();\n    const [errorText, setErrorText] = useState(\"\");\n    const { t } = useTranslation(\"auth\")\n\n    const [state, setState] = useState({\n        username: \"\",\n        password: \"\",\n    });\n\n    function usernameChanged(event) {\n        const username = event.target.value;\n        setState({\n            ...state,\n            username: username.toLowerCase()\n        });\n    }\n\n    function passwordChanged(event) {\n        const password = event.target.value;\n        setState({\n            ...state,\n            password: password\n        });\n    }\n\n    async function login() {\n        const url = SERVER_IP + \"/api/login\";\n        let response = await fetch(url, {method: \"POST\", body: JSON.stringify(state)});\n        let json_data = await response.json();\n        if (response.status === 200) {\n            localStorage.setItem(\"token\", json_data.token);\n            store.dispatch(loginAction(json_data));\n            navigate(\"/account\");\n        } else {\n            setErrorText(json_data.error)\n        }\n    }\n\n    return (\n        <div className=\"loginForm\">\n            <h1 className=\"loginTitle\">{t(\"signInTitle\")}</h1>\n            <p className=\"errorText\">{errorText}</p>\n            <input type=\"text\" placeholder={t(\"usernamePlaceholder\")} onChange={usernameChanged} className=\"card inputForm usernameInput\" />\n            <br/>\n            <input type=\"password\" placeholder={t(\"passwordPlaceholder\")} onChange={passwordChanged} className=\"card inputForm passwordInput\" />\n            <br/>\n            <button className=\"card loginButton\" onClick={login}>{t(\"signInButton\")}</button>\n            <br/>\n            <p className=\"signupLink\">{t(\"newToMercury\")} <Link to=\"/signup\">{t(\"signUpButton\")}</Link></p>\n        </div>\n    );\n}\n\nexport default LoginForm;","import \"../styles/SignUpForm.css\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport PasswordStrengthBar from \"react-password-strength-bar\";\nimport { requestVerificationCode, validateEmail } from \"../utils\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\n\nfunction SingUpForm() {\n    const navigate = useNavigate();\n    const { t } = useTranslation(\"auth\")\n    const [state, setState] = useState({\n        email: \"\",\n        password: \"\",\n        repeatedPassword: \"\",\n        fullname: \"\",\n        passwordScore: \"\",\n        username: \"\",\n        passwordsMatch: \"\",\n        errorText: \"\"\n    });\n\n    function onInputChange(event) {\n        const target = event.currentTarget;\n        switch (target.name) {\n            case \"email\": \n                setState({...state, email: target.value});\n                break;\n            case \"password\": \n                setState({\n                    ...state, \n                    password: target.value,\n                    passwordsMatch: target.value === state.password || state.repeatedPassword === \"\" ? \"\" : t(\"passwordsDontMatch\")\n                });\n                break;\n            case \"repeatedPassword\": \n                setState({\n                    ...state, \n                    repeatedPassword: target.value,\n                    passwordsMatch: target.value === state.password ? \"\" : t(\"passwordsDontMatch\")\n                });\n                break;\n            case \"fullname\": \n                setState({...state, fullname: target.value});\n                break;\n            case \"username\":\n                if (target.value.length > 0) {\n                    setState({\n                        ...state,\n                        username: target.value.charAt(0) === \"@\" ? target.value : \"@\" + target.value\n                    });\n                } \n        }\n    }\n\n    function scoreChanged(score, _) {\n        setState({\n            ...state,\n            passwordScore: score\n        });\n    }\n\n    async function signUp() {\n        if (!validateEmail(state.email)) {\n            setState({\n                ...state,\n                errorText: t(\"invalidEmail\")\n            });\n            return;\n        }\n        if (state.repeatedPassword !== state.password) {\n            return;\n        }\n        if (state.passwordScore === 0 || state.passwordScore === 1) {\n            setState({\n                ...state,\n                errorText: t(\"weakPassword\")\n            });\n            return;\n        }\n        if (state.fullname.length < 2) {\n            setState({\n                ...state,\n                errorText: t(\"shortFullname\")\n            });\n            return;\n        }\n        if (state.username.length < 3) {\n            setState({\n                ...state,\n                errorText: t(\"shortUsername\")\n            });\n            return;\n        }\n\n        setState({\n            ...state,\n            errorText: \"\"\n        });\n        var [json_data, status_code] = await requestVerificationCode(state.username.slice(1), state.email);\n        if (status_code !== 200) {\n            setState({\n                ...state,\n                errorText: json_data.error\n            });\n        } else {\n            navigate(\"/verification\", { state: state, setState: setState});\n        }\n\n    }\n\n    return (\n        <div className=\"signupForm\">\n            <h1 className=\"signupTitle\">{t(\"signUpTitle\")}</h1>\n            <p className=\"errorText\">{state.errorText}</p>\n            <input type=\"text\" placeholder={t(\"fullnamePlaceholder\")} className=\"card inputForm\" onChange={onInputChange} name=\"fullname\" value={state.fullname} />\n            <br/>\n            <input type=\"email\" placeholder={t(\"emailPlaceholder\")} className=\"card inputForm emailInput\" onChange={onInputChange} name=\"email\" value={state.email}/>\n            <br />\n            <input type=\"text\" placeholder={t(\"usernamePlaceholder\")} className=\"card inputForm usernameInput\" onChange={onInputChange} name=\"username\" value={state.username} />\n            <br />\n            <input type=\"password\" placeholder={t(\"passwordPlaceholder\")} className=\"card inputForm password\" onChange={onInputChange} name=\"password\" value={state.password} />\n            <PasswordStrengthBar password={state.password} className=\"passwordStrengthBar\" minLength=\"8\" onChangeScore={scoreChanged}/>\n            <br/>\n            <input type=\"password\" placeholder={t(\"enterPasswordAgainPlaceholder\")} className=\"card inputForm repeatPassword\" onChange={onInputChange} name=\"repeatedPassword\" value={state.repeatedPassword} />\n            <br/>\n            <p className=\"passwordsMatch\">{state.passwordsMatch}</p>\n            <button className=\"card signupButton\" onClick={signUp}>{t(\"signUpButton\")}</button>\n        </div>\n    );\n}\n\nexport default SingUpForm;","import React from \"react\";\nimport { useState } from \"react\";\nimport \"../styles/VerificationCodePage.css\";\nimport ReactInputVerificationCode from 'react-input-verification-code';\nimport { useEffect } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\"\nimport { requestVerificationCode } from \"../utils\";\nimport { Navigate } from \"react-router\";\nimport { SERVER_IP } from \"../constants\";\n\n\nfunction VerificationCodePage() {\n    const [seconds, setSeconds] = useState(59);\n    const [errorText, setErrorText] = useState(\"\");\n    const { state } = useLocation();\n    const [verificationCode, setVerificationCode] = useState(\"\");\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setSeconds(s => {\n                if (s > 0) {\n                    return s - 1\n                } else {\n                    return 0\n                }\n            });\n        }, 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    async function resendCode() {\n        if (seconds !== 0) {\n            setErrorText(\"Wait for \" + seconds + \" seconds\");\n            return;\n        }\n        console.log(state.email);\n        var json_data, statusCode = await requestVerificationCode(state.email)\n        if (statusCode === 200) {\n            setSeconds(59);\n        } else {\n            setErrorText(json_data.error);\n        }\n    }\n\n    async function signUp() {\n        if (verificationCode.length === 4) {\n            const payload = {\n                email: state.email,\n                password: state.password,\n                username: state.username.slice(1),\n                verificationCode: verificationCode,\n                fullname: state.fullname\n            };\n            const response = await fetch(SERVER_IP + \"/api/signup\", {method: \"POST\", body: JSON.stringify(payload)});\n            if (response.status === 200) {\n                navigate(\"/login\");\n            } else {\n                console.log(await response.json());\n            }\n        } else {\n            setErrorText(\"Fullfill the verification code\")\n        }\n    }\n\n    if (state === null) {\n        return (<Navigate to=\"/signup\"/>);\n    }\n\n    return (\n        <div className=\"confirmationCodeForm\">\n            <h1>Enter code sent to your email</h1>\n            <p className=\"errorText\">{errorText}</p>\n            <center> \n                <ReactInputVerificationCode placeholder=\"\" onChange={(value) => setVerificationCode(value)} value={verificationCode}/>\n            </center>\n            <p className=\"resendTimer\"><Link onClick={resendCode} to=\"/verification\">Resend</Link> {seconds !== 0 ? \" in \" + seconds + \" seconds\" : null}</p>\n            <button className=\"card checkCode\" onClick={signUp}>Sign Up</button>\n        </div>\n    );\n}\n\n\nexport default VerificationCodePage;","import React from \"react\"\n\nexport const CollectionsContext = React.createContext() ","import React from \"react\"\n\nexport const ChevronIcon = ({ width, height, fill, style }) => {\n    return (\n        <svg className=\"chevron\" xmlns=\"http://www.w3.org/2000/svg\" width={width} height={height} fill={fill} viewBox=\"0 0 16 16\" style={style}>\n            <path fillRule=\"evenodd\" d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"/>\n        </svg>\n    )\n}","import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"../styles/Collection.css\"\nimport { TINYGRAPH_IP } from \"../constants\";\nimport { useSelector } from \"react-redux\";\nimport { CollectionsContext } from \"../context/CollectionsContext\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChevronIcon } from \"../icons/ChevronIcon\";\n\n\nfunction Collection({ authorUsername, collectionName, wordCount, onDelete }) {\n    const { t } = useTranslation(\"collections\")\n    const navigate = useNavigate();\n    const authState = useSelector(state => state.auth)\n    const { isEditing } = React.useContext(CollectionsContext)\n\n    function openCollection() {\n        navigate(\"/collections/\" + authorUsername + \"/\" + collectionName)\n    }\n\n    return (\n        <div style={{display: \"flex\"}}>\n            {isEditing && (\n                <div className=\"editButtons\">\n                    <button className=\"deleteCurrentCollection\" onClick={() => onDelete(collectionName)}>{t(\"deleteCollectionButton\")}</button>\n                    {/* <button className=\"renameCurrentCollection\">Rename</button> */}\n                </div>\n            )}\n            <div className=\"card collection\">\n                <div className=\"card collectionDetails\" onClick={openCollection}>\n                    <p className=\"collectionName\">\n                        {collectionName}\n                    </p>\n                    <p className=\"wordCount\">\n                        {wordCount === 1 ? wordCount + \" word\" : wordCount + \" words\"}\n                    </p>\n                    <ChevronIcon width=\"20\" height=\"20\" fill=\"currentColor\" />\n                    \n                </div>\n                <div className=\"card collectionFeatures\">\n                    <img src={TINYGRAPH_IP + \"/spaceinvaders/\" + authState.username + \"?theme=bythepool&numcolors=4&size=200&fmt=svg\"} alt=\"account\" className=\"profilePicture\" /> \n                    <Link to=\"/account/\">{\"@\" + authorUsername}</Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Collection;","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useSelector } from \"react-redux\"\nimport { SERVER_IP } from \"../constants\"\nimport { CollectionsContext } from \"../context/CollectionsContext\"\nimport \"../styles/CollectionsHeader.css\"\nimport { DropdownMenu } from \"./DropdownMenu\"\n\nexport default function CollectionsHeader( {setCollections} ) {\n    const { t } = useTranslation(\"collections\")\n    const [dropdownHidden, setDropdownHidden] = React.useState(true)\n    const [collectionName, setCollectionName] = React.useState(\"\")\n    const [errorText, setErrorText] = React.useState(\"\")\n    const authState = useSelector(state => state.auth)\n    const { isEditing, toggleEditing } = React.useContext(CollectionsContext)\n\n    function collectionNameChanged(event) {\n        setCollectionName(event.target.value)\n    }\n\n    async function createCollection() {\n        if (collectionName.length < 3) {\n            setErrorText(t(\"collectionNameLengthError\"))\n            return\n        }\n        let response = await fetch([SERVER_IP, \"api\", \"createCollection\", \n                                      authState.token, collectionName].join(\"/\"), \n                                      { method: \"POST\" })\n        if (!response.ok) {\n            setErrorText(t(\"collectionAlreadyCreatedError\"))\n            return\n        }\n        if (response.status === 200) {\n            setCollections(state => {\n                return {collections: [...state.collections, {name: collectionName, wordCount: 0, username: authState.username}]}\n            })\n            setDropdownHidden(hidden => !hidden)\n        }\n    }\n\n    return (\n        <div className=\"collections-header\">\n            <button className=\"createCollectionButton\" onClick={() => setDropdownHidden(hidden => !hidden)}>\n                {t(\"createCollectionButton\")}\n            </button>\n            <button className=\"selectCollectionButton\" onClick={toggleEditing}>\n                {isEditing ? t(\"cancelEditingButton\") : t(\"startEditingButton\")}\n            </button>\n            <DropdownMenu \n                style={{transform: \"translateX(0) translateY(120px)\", \"text-align\": \"center\"}} \n                header={(\n                    <>\n                        <p>{t(\"createCollectionDropdownTitle\")}</p>\n                        {errorText && (<p className=\"errorText\" style={{\"font-size\": \"16px\"}}>{errorText}</p>)}\n                    </>\n                )} \n                body={(\n                    <input type=\"text\" className=\"collectionNameInput\" placeholder={t(\"collectionNameInputPlaceholder\")} \n                           value={collectionName} onChange={collectionNameChanged} />\n                )} \n                footer={(\n                    <button className=\"addCollectionButton\" onClick={createCollection}>\n                        {t(\"addCollectionButton\")}\n                    </button>\n                )}\n                isHidden={dropdownHidden} />\n            \n        </div>\n    )\n}","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { SERVER_IP } from \"../constants\";\nimport Collection from \"./Collection\"\nimport { useState } from \"react\";\nimport CollectionsHeader from \"./CollectionsHeader\";\nimport { CollectionsContext } from \"../context/CollectionsContext\";\n\n\nfunction Collections() {\n    const authState = useSelector(state => state.auth);\n    const [collections, setCollections] = useState({\n        collections: []\n    })\n    const [isEditing, setEditing] = useState(false)\n\n    const toggleEditing = () => {\n        setEditing(edit => !edit)\n    }\n\n    const onCollectionDelete = async ( name ) => {\n        const response = await fetch([SERVER_IP, \"api\", \"deleteCollection\", \n                                authState.token, name].join(\"/\"),\n                                { method: \"POST\" })\n        if (response.ok) {\n            setCollections({\n                collections: collections.collections.filter(col => col.name !== name)\n            })\n        } else {\n            // handle error while deleting collection\n        }\n    }\n\n    useEffect(() => {\n        async function fetchCollections() {\n            const response = await fetch([SERVER_IP, \"api\", \"getCollections\", \n                                          authState.token, authState.username].join(\"/\"))\n            if (response.status === 200) {\n                setCollections({\n                    collections: await response.json()\n                })\n            }\n        }\n        if (authState.username !== \"\") {\n            fetchCollections()\n        }\n    }, [authState.username]);\n\n    return (\n        <div className=\"collections\">\n            <section>\n                    <CollectionsContext.Provider value={{ isEditing, toggleEditing }}>\n                        <CollectionsHeader setCollections={setCollections}/>\n                        {collections.collections.map((elem, i) => (\n                            <Collection key={i} authorUsername={elem.username} \n                                        wordCount={elem.wordCount} collectionName={elem.name}\n                                        onDelete={onCollectionDelete} />\n                        ))}\n                    </CollectionsContext.Provider>\n               \n            </section>\n        </div>\n    );\n}\n\n\nexport default Collections;","import React from \"react\"\n\nexport const CollectionWordsContext = React.createContext()","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { CollectionWordsContext } from \"../context/CollectionWordsContext\";\nimport { ChevronIcon } from \"../icons/ChevronIcon\";\nimport \"../styles/CollectionWord.css\"\nimport DefinitionsView from \"./DefinitionsView\";\n\n\nfunction CollectionWord({ style, jsonData, onDelete }) {\n    const [isOpen, setOpen] = React.useState(false)\n    const { t } = useTranslation(\"collections\")\n    const { isEditing } = React.useContext(CollectionWordsContext)\n\n    const handleWordCardClick = () => {\n        if (!isEditing) {\n            setOpen(prev => !prev)\n        }\n    }\n\n    const chevronStyle = {\n        transition: \"transform 0.3s\",\n        transform: isOpen ? \"translateY(-50%) rotate(90deg)\" : \"\",\n    }\n\n    const definitionsViewStyle = {\n        backgroundColor: \"rgba(0, 0, 0, 0.03)\",\n        paddingTop: \"10px\",\n        margin: \"0\"\n    }\n\n    return (<>\n        <div className=\"collectionWordCard\" style={style} onClick={handleWordCardClick}>\n        {isEditing && (\n            <button className=\"deleteCollectionButton\" style={{\n                    marginLeft: \"0\",\n                    marginRight: \"10px\"\n                }}\n                onClick={() => onDelete(jsonData.word)}>\n                {t(\"deleteCollectionButton\")}\n            </button>\n        )}\n            <p className=\"collectionWord\">{jsonData.word}</p>\n            <ChevronIcon width=\"20\" height=\"20\" fill=\"currentColor\" style={chevronStyle} />\n        </div>\n        {isOpen && <DefinitionsView json_data={jsonData} style={definitionsViewStyle}/>}\n        </>\n    );\n}\n\nexport default React.memo(CollectionWord);","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useNavigate } from \"react-router-dom\"\nimport { CollectionWordsContext } from \"../context/CollectionWordsContext\"\nimport \"../styles/CollectionWordsHeader.css\"\n\nexport default function CollectionWordsHeader({ authorUsername, collectionName }) {\n    const { t } = useTranslation(\"collectionWords\")\n    const { isEditing, toggleEditing, collectionWords } = React.useContext(CollectionWordsContext)\n    const navigate = useNavigate()\n\n    function openLearningWindow() {\n        navigate(\"/learn/\" + authorUsername + \"/\" + collectionName, {\n            state: collectionWords.slice(0, 20)\n        })\n    }\n\n    return (\n        <div className=\"card collectionHeader\">\n            <p className=\"collectionTitle\">{collectionName}</p>\n            <div className=\"collectionWordsHeaderButtons\">\n                <button className=\"selectCollectionButton\" onClick={toggleEditing}>\n                    {isEditing ? t(\"cancelEditingButton\", {ns: \"collections\"}) : t(\"startEditingButton\", {ns: \"collections\"})}\n                </button>\n                <button className=\"learnWordsButton\" onClick={openLearningWindow}>{t(\"learnButton\")}</button>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { SERVER_IP } from \"../constants\";\nimport CollectionWord from \"./CollectionWord\";\nimport \"../styles/CollectionWords.css\"\nimport CollectionWordsHeader from \"./CollectionWordsHeader\";\nimport { CollectionWordsContext } from \"../context/CollectionWordsContext\";\n\n\nfunction CollectionWords() {\n    const { username, collectionName } = useParams();\n    const authState = useSelector(state => state.auth);\n    const [collectionWords, setCollectionWords] = useState([]);\n    const [isEditing, setEditing] = useState(false)\n\n    const toggleEditing = () => {\n        setEditing(edit => !edit)\n    }\n\n    const collectionWordDeleted = async ( word ) => {\n        const response = await fetch([SERVER_IP, \"api\", \"deleteCollectionWord\", \n                                authState.token, collectionName, word].join(\"/\"),\n                                { method: \"POST\" })\n\n        if (response.ok) {\n            setCollectionWords(state => state.filter((w) => w.word !== word))\n        } else {\n            // handler error while deleting collection word\n        }\n    }\n\n    useEffect(() => {\n        if (authState.username !== \"\") {\n            fetch([SERVER_IP, 'api', 'getCollectionWords', authState.token, username, collectionName].join(\"/\"))\n                .then(async response => setCollectionWords(await response.json()));\n        }\n    }, [authState.username]);\n\n    return (\n        <div className=\"collectionWords\">\n            <section>\n                <CollectionWordsContext.Provider value={{ isEditing, toggleEditing, collectionWords }}>\n                    <CollectionWordsHeader authorUsername={username} collectionName={collectionName} isEditing={false} />\n                    <div className=\"card colWords\">\n                        {collectionWords && collectionWords.sort((a, b) => a.word > b.word).map((elem, i) => (\n                            <CollectionWord key={i} jsonData={elem} style={{\n                                borderBottom: i === collectionWords.length - 1 ? \"none\" : \"1px solid lightgray\",\n                                cursor: isEditing ? \"auto\" : \"pointer\",\n                                paddingLeft: isEditing ? \"10px\" : \"20px\"\n                            }} onDelete={collectionWordDeleted} />))}\n                    </div>\n                </CollectionWordsContext.Provider>\n            </section>\n        </div>\n    );\n}\n\n\nexport default React.memo(CollectionWords);","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport enLocalization from \"./locales/en/translation.json\"\nimport ruLocalization from \"./locales/ru/translation.json\"\n\ni18n.use(initReactI18next).init({\n    fallbackLng: 'ru',\n    debug: true,\n    resources: {\n        en: enLocalization,\n        ru: ruLocalization\n    },\n    interpolation: {\n        escapeValue: false, // not needed for react as it escapes by default\n    },\n})\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport \"../styles/FinishLearningCard.css\"\n\nexport default function FinishLearningCard({ wordsStatus }) {\n    const { authorUsername, collectionName } = useParams()\n    const navigate = useNavigate()\n    const { t } = useTranslation(\"learning\")\n    const percentage = Math.floor(wordsStatus.reduce((a, b) => a + (b.status === \"true\" ? 1 : 0), 0) / wordsStatus.length * 100)\n\n    function goBackToCollection() {\n        navigate(\"/collections/\" + authorUsername + \"/\" + collectionName)\n    }\n    \n    return (\n        <section>\n            <div className=\"card finishLearningCard\">\n                <div className=\"youRememberText\">\n                    <p className=\"youRemember\">{t(\"youRemember\")}</p>\n                    <p className=\"percentageOfWords\">{percentage}% {t(\"ofWords\")}</p>\n                </div>\n                <button className=\"goBackToCollectionButton\" onClick={goBackToCollection}>\n                    {t(\"goBack\")}\n                </button>\n            </div>\n        </section>\n    )\n}","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport \"../styles/LearningCard.css\"\nimport DefinitionsView from \"./DefinitionsView\"\nimport PronounceButton from \"./PronounceButton\"\n\nexport default function LearningCard({ word, currentWordIndex, moveCurrentWordIndex, numberOfWords, wordStatusChanged }) {\n    const { t } = useTranslation(\"learning\")\n    const [definitionShowing, setDefinitionShowing] = React.useState(false)\n\n    function nextWord(e) {\n        wordStatusChanged(word, e.target.className === \"rememberButton\")\n        moveCurrentWordIndex()\n    }\n\n    return (\n        <div className=\"learningCard card\">\n            <div className=\"statsHeader\">\n                <p>{currentWordIndex}/{numberOfWords}</p>\n            </div>\n            <div className=\"learningWord\">\n                <p>{word.word}</p>\n                <PronounceButton width=\"24\" height=\"24\" fill=\"white\" phonetics={word.phonetics} />\n            </div>\n            <button className=\"showDefinitionButton\" \n                    onClick={() => setDefinitionShowing(!definitionShowing)}>\n                    {t(definitionShowing ? \"hideDefinition\" : \"showDefinition\")}\n            </button>\n\n            <div className=\"learningDefinition\">\n                {definitionShowing && <DefinitionsView json_data={word} showWord={false} />}\n            </div>\n            <div className=\"buttons\">\n                <button className=\"rememberButton\" onClick={nextWord}>{t(\"rememberButton\")}</button>\n                <br />\n                <button className=\"forgotButton\" onClick={nextWord}>{t(\"forgotButton\")}</button>\n            </div>\n        </div>\n    )\n}","import React from \"react\"\nimport { useEffect } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { useLocation, useParams } from \"react-router-dom\"\nimport { SERVER_IP } from \"../constants\"\nimport FinishLearningCard from \"./FinishLearningCard\"\nimport LearningCard from \"./LearningCard\"\n\nexport default function Learning() {\n    const { collectionName } = useParams()\n    const location = useLocation()\n    const wordsToLearn = location.state\n    const authState = useSelector(state => state.auth)\n    const [currentIndex, setCurrentIndex] = React.useState(0)\n    const [wordsStatus, setWordsStatus] = React.useState([])\n\n    useEffect(() => {\n        async function updatePriorities() {\n            await fetch([SERVER_IP, \"api\", \"learnWords\", \n                         authState.token, collectionName].join(\"/\"),\n                         {method: \"POST\", body: JSON.stringify(wordsStatus)})\n        }\n        if (wordsStatus.length === wordsToLearn.length) {\n            updatePriorities()\n        }\n    }, [wordsStatus])\n\n    async function moveCurrentWordIndex() {\n        setCurrentIndex(currentIndex + 1)\n    }\n\n    function changeWordStatus(word, status) {   \n        setWordsStatus(state => [...state, {word: word.word, status: status.toString()}])\n    }\n\n    return (\n        <section>\n            {wordsToLearn.length > 0 && currentIndex < wordsToLearn.length ?\n             <LearningCard currentWordIndex={currentIndex + 1} \n                            numberOfWords={wordsToLearn.length} \n                            word={wordsToLearn[currentIndex]} \n                            moveCurrentWordIndex={moveCurrentWordIndex}\n                            wordStatusChanged={changeWordStatus}/> :\n                <FinishLearningCard wordsStatus={wordsStatus} />}\n            \n        </section>\n    )\n}","import './index.css';\nimport { render } from \"react-dom\";\nimport { \n    BrowserRouter,\n    Routes,\n    Route,\n    Navigate\n} from \"react-router-dom\";\nimport React from 'react';\nimport store from \"./store\";\nimport { Provider } from 'react-redux';\nimport { fetchUser } from \"./store/slices/auth\";\n\nimport Header from './components/Header';\nimport ProfilePage from './components/ProfilePage';\nimport Dictionary from './components/Dictionary';\nimport LoginForm from './components/LoginForm';\nimport SignUpForm from \"./components/SignUpForm\";\nimport VerificationCodePage from \"./components/VerificationCodePage\";\nimport Collections from \"./components/Collections\";\nimport CollectionWords from './components/CollectionWords';\nimport { Suspense } from 'react';\nimport './i18n'\nimport Learning from './components/Learning';\n\nstore.dispatch(fetchUser);\n\nfunction Index() {\n    return (\n        <Suspense fallback=\"loading\">\n            <Provider store={store}>\n                <BrowserRouter>\n                    <Header />\n                    <Routes>\n                        <Route path=\"/\" element={<Navigate to=\"/dictionary\" />} />\n                        <Route path=\"/dictionary\" element={<Dictionary />} />\n                        <Route path=\"/account\" element={<ProfilePage />} />\n                        <Route path=\"/login\" element={<LoginForm/>} />\n                        <Route path=\"/signup\" element={<SignUpForm />} />\n                        <Route path=\"/verification\" element={<VerificationCodePage />} />\n                        <Route path=\"/collections/:username/:collectionName\" element={<CollectionWords />} />\n                        <Route path=\"/collections\" element={<Collections />} />\n                        <Route path=\"/learn/:authorUsername/:collectionName\" element={<Learning />} />\n                </Routes>\n                </BrowserRouter>\n            </Provider>\n        </Suspense>\n    );\n}\n\nconst rootElement = document.getElementById(\"root\");\nrender(<Index />, rootElement);\n\n"],"sourceRoot":""}